<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="/stylesheets/dashboard.css" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Roboto&display=swap"
      rel="stylesheet"
    />
    <script
      src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAdaCbAP6tXJ5zSGES45HyQmgd8ZzV3IO8&callback=initMap"
      async
      defer
    ></script>
    <title>Dashboard</title>
  </head>
  <body>
    <header>
      <nav class="navbar">
        <div class="logo-container">
          <img src="/images/image.png" alt="Logo" class="logo-circle" />
          <a href="/" class="logo">STORKS</a>
        </div>
        <!-- ... -->
        <ul class="nav-links">
          <li><a href="/favors-page">Favors</a></li>
          <li><a href="/rewards-page">Rewards</a></li>
          <li><a href="/profile-page">Profile</a></li>
        </ul>
        <div class="button-container">
          <a href="/create-task" class="create-task-btn">+ Create new task</a>
          <form action="/logout" method="POST" class="logout-form">
            <button type="submit" class="logout-btn">Logout</button>
          </form>
        </div>
        <!-- ... -->
      </nav>
    </header>

    <main>
      <section class="hero">
        <div class="hero-content">
          <h1>
            Welcome, <%= user.name.charAt(0).toUpperCase() + user.name.slice(1)
            %>!
          </h1>
          <p>Let's start accomplishing your tasks with STORKS.</p>
        </div>
      </section>
      <div>
        <div id="map" style="width: 100%; height: 400px"></div>
      </div>
    </main>
    <script>
      const userProfilePictureUrl = "<%= user.profilePictureUrl %>";
    </script>
    <script>
      let userMarker;
      function initMap() {
        const mapOptions = {
          center: { lat: 25.757028, lng: -80.3732 },
          zoom: 17,
        };
        const map = new google.maps.Map(
          document.getElementById("map"),
          mapOptions
        );
        // Function to update user location
        function updateUserLocation(position) {
          const userLocation = {
            lat: position.coords.latitude,
            lng: position.coords.longitude,
          };
          map.setCenter(userLocation);
          if (!userMarker) {
            userMarker = new google.maps.Marker({
              position: userLocation,
              map: map,
              icon: userProfilePictureUrl || "/images/default-avatar.png", // Use the user's profile picture if available
            });
          } else {
            userMarker.setPosition(userLocation);
          }
        }
        // Use Geolocation API to track the user's location
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(updateUserLocation);
          navigator.geolocation.watchPosition(
            updateUserLocation,
            (error) => {
              console.log("Error getting user location", error);
            },
            {
              enableHighAccuracy: true,
              maximumAge: 0,
              timeout: Infinity,
            }
          );
        }
      }
    </script>
  </body>
</html>