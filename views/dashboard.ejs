<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="/stylesheets/dashboard.css" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Roboto&display=swap"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"
    />
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
    <script
      src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAdaCbAP6tXJ5zSGES45HyQmgd8ZzV3IO8&callback=initMap"
      async
      defer
    ></script>
    <script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-database.js"></script>

    <title>Dashboard</title>
  </head>
  <body>
    <header>
      <nav class="navbar">
        <div class="logo-container">
          <img src="/images/image.png" alt="Logo" class="logo-circle" />
          <a href="/" class="logo">STORKS</a>
        </div>
        <ul class="nav-links">
          <li><a href="/favors">Favors</a></li>
          <li><a href="/rewards-page">Rewards</a></li>
          <li><a href="/profile-page">Profile</a></li>
        </ul>
        <div class="button-container">
          <button
            class="btn btn-primary"
            data-toggle="modal"
            data-target="#createTaskModal"
          >
            Create new task
          </button>

          <form action="/logout" method="POST" class="logout-form">
            <button type="submit" class="logout-btn">Logout</button>
          </form>
        </div>
      </nav>
    </header>

    <main>
      <section class="hero">
        <div class="hero-content">
          <h1>
            Welcome, <%= user.name.charAt(0).toUpperCase() + user.name.slice(1)
            %>!
          </h1>
          <p>Let's start accomplishing your tasks with STORKS.</p>
        </div>
      </section>

      <div
        class="modal fade"
        id="createTaskModal"
        tabindex="-1"
        role="dialog"
        aria-labelledby="createTaskModalLabel"
        aria-hidden="true"
      >
        <div class="modal-dialog" role="document">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="createTaskModalLabel">
                Create new task
              </h5>
              <button
                type="button"
                class="close"
                data-dismiss="modal"
                aria-label="Close"
              >
                <span aria-hidden="true">&times;</span>
              </button>
            </div>
            <div class="modal-body">
              <form action="/marker" method="POST">
                <label for="marker-title">Name:</label>
                <input type="text" id="marker-name" name="marker-name" />
                <br />
                <label for="marker-phone">Phone Number:</label>
                <input type="text" id="marker-phone" name="marker-phone" />
                <br />
                <label for="marker-address">Address:</label>
                <input type="text" id="marker-address" name="marker-address" />
                <br />
                <label for="marker-description"
                  >What do you need help with?:</label
                >
                <input
                  type="text"
                  id="marker-description"
                  name="marker-description"
                />
                <input type="hidden" id="location" name="location" />
                <button
                  type="button"
                  class="btn btn-secondary"
                  data-dismiss="modal"
                >
                  Close
                </button>
                <button
                  type="submit"
                  class="btn btn-primary"
                  id="add-marker-btn"
                >
                  Add Marker
                </button>
              </form>
            </div>
          </div>
        </div>
      </div>
      <div>
        <div id="map"></div>
      </div>
    </main>

    <script>
      let userMarker;

      function initMap() {
        const mapOptions = {
          center: { lat: 25.757028, lng: -80.3732 },
          zoom: 17,
        };
        const map = new google.maps.Map(
          document.getElementById("map"),
          mapOptions
        );

  let userLocationMarker;

  // Function to update user location
  function updateUserLocation(position) {
    const userLocation = {
      lat: position.coords.latitude,
      lng: position.coords.longitude,
    };
    map.setCenter(userLocation);

    // User Location Marker
    if (!userLocationMarker) {
      userLocationMarker = new google.maps.Marker({
        position: userLocation,
        map: map,
        icon: {
          url: userProfilePictureUrl,
          scaledSize: new google.maps.Size(30, 30),
        },
      });
    } else {
      userLocationMarker.setPosition(userLocation);
    }
  }

  // Get user's current location
  if (navigator.geolocation) {
    navigator.geolocation.watchPosition(updateUserLocation);
  } else {
    console.log("Geolocation is not supported by this browser.");
  }

        function createMarkersFromFavors() {
        const favorsRef = firebase.database().ref("favors");

        favorsRef.on("child_added", (snapshot, ) => {
          const favor = snapshot.val();
          const markerPosition = {
            lat: favor.location.lat, // modified here
            lng: favor.location.lng, // modified here
          };

          const infoWindowContent = `
            <div>
              <h4>${favor.name}</h4>
              <p>Phone Number: ${favor.phoneNumber}</p>
              <p>Address: ${favor.address}</p>
              <p>What do you need help with?: ${favor.description}</p>
            </div>
          `;

          const marker = new google.maps.Marker({
            position: markerPosition,
            map: map,
          });

          const infoWindow = new google.maps.InfoWindow({
            content: infoWindowContent,
          });

          marker.addListener("click", function () {
            infoWindow.open(map, marker);
          });
        });
      }

        createMarkersFromFavors(); // Call this function here

        const addMarkerBtn = document.getElementById("add-marker-btn");
        addMarkerBtn.addEventListener("click", function () {
          const markerTitle = document.getElementById("marker-title").value;
          const markerPhone = document.getElementById("marker-phone").value;
          const markerAddress = document.getElementById("marker-address").value;
          const markerDescription =
            document.getElementById("marker-description").value;

          const marker = new google.maps.Marker({
            position: userMarker.getPosition(),
            map: map,
            title: markerTitle,
            icon: {
              url: userProfilePictureUrl,
              scaledSize: new google.maps.Size(30, 30),
            },
          });

          const infoWindow = new google.maps.InfoWindow({
            content:
              `<h3>${markerTitle}</h3>` +
              `<p>Phone Number: ${markerPhone}</p>` +
              `<p>Address: ${markerAddress}</p>` +
              `<p>What do you need help with?: ${markerDescription}</p>`,
          });
          //create loop so that when page loads, it creates markers from favors

          // opens the info window when the marker is clicked
          marker.addListener("click", function () {
            infoWindow.open(map, marker);
          });
        });
      }
    </script>
  </body>
</html>
